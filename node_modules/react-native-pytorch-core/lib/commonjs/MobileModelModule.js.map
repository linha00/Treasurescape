{"version":3,"sources":["MobileModelModule.ts"],"names":["PyTorchCoreModelLoaderModule","ModelLoaderModule","NativeModules","MobileModel","download","modelPath","uri"],"mappings":";;;;;;;AASA;;AACA;;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,MAAM;AAACA,EAAAA,4BAA4B,EAAEC;AAA/B,IAAoDC,0BAA1D;AAwCO,MAAMC,WAAwB,GAAG;AACtC,QAAMC,QAAN,CAAeC,SAAf,EAAsD;AACpD,UAAMC,GAAG,GAAG,yBAAYD,SAAZ,CAAZ;AACA,WAAO,MAAMJ,iBAAiB,CAACG,QAAlB,CAA2BE,GAA3B,CAAb;AACD;;AAJqC,CAAjC","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport {NativeModules} from 'react-native';\nimport {getModelUri, ModelPath} from './Models';\n\nconst {PyTorchCoreModelLoaderModule: ModelLoaderModule} = NativeModules;\n\nexport interface ModelResultMetrics {\n  /**\n   * The pack time, model inference time, and unpack time in milliseconds.\n   */\n  totalTime: number;\n  /**\n   * The model inference time in milliseconds.\n   */\n  inferenceTime: number;\n  /**\n   * The pack time in milliseconds.\n   */\n  packTime: number;\n  /**\n   * The unpack time in milliseconds.\n   */\n  unpackTime: number;\n}\n\n/**\n * @packageDocumentation\n *\n * The `MobileModel` is the core module providing functions to run model\n * inference and preload models.\n */\nexport interface MobileModel {\n  /**\n   * Download a model to the local file system and return the local file path\n   * as a model. If the model path is a file path already, it will return the\n   * same path as a result.\n   *\n   * @param modelPath The model path as require or uri (i.e., `require`).\n   *\n   * @deprecated Use third-party file downloader (e.g., expo-file-system or react-native-fs)\n   */\n  download(modelPath: ModelPath): Promise<string>;\n}\n\nexport const MobileModel: MobileModel = {\n  async download(modelPath: ModelPath): Promise<string> {\n    const uri = getModelUri(modelPath);\n    return await ModelLoaderModule.download(uri);\n  },\n};\n"]}