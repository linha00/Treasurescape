{"version":3,"sources":["experimental.ts"],"names":["experimental","__torchlive__"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAoBA,OAAO,MAAMA,YAA0B,GAAGC,aAAa,CAACD,YAAjD","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {Audio} from '../audio/AudioModule';\n\n/**\n * :::caution\n *\n * Experimental functions are subject to change.\n * Avoid using these functions.\n *\n * :::\n */\ninterface Experimental {\n  /**\n   * @experimental\n   *\n   * The `audioFromBytes` function create an [[Audio]] from the PCM byte array.\n   *\n   * @param bytes The PCM byte array data.\n   * @param sampleRate The sample rate of the audio.\n   * @returns A promise resolving into an [[Audio]].\n   */\n  audioFromBytes(bytes: number[], sampleRate: number): Promise<Audio>;\n}\n\ntype Torchlive = {\n  experimental: Experimental;\n};\n\ndeclare const __torchlive__: Torchlive;\n\nexport const experimental: Experimental = __torchlive__.experimental;\n"]}